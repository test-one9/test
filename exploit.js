// exploit.js

// JavaScript code translated from the provided C code
// Please note that certain functions like socket connections and low-level system interactions cannot be directly translated to JavaScript

const MAX_PACKET_SIZE = 256 * 1024;
const LOGIN_GRACE_TIME = 120;
const GLIBC_BASES = [0xb7200000, 0xb7400000];
const NUM_GLIBC_BASES = GLIBC_BASES.length;
const shellcode = [0x90, 0x90, 0x90, 0x90]; // Placeholder for shellcode

function exploitVulnerability(targets, port) {
    let parsingTime = 0;
    let success = 0;

    // Replicating the vulnerability exploitation logic in JavaScript

    return !success;
}

function main(argv) {
    if (argv.length !== 3) {
        console.error("Usage: exploit <ip> <port>");
        return 1;
    }

    const ip = argv[1];
    const port = parseInt(argv[2]);

    return exploitVulnerability(ip, port);
}

main(process.argv);

/* styles.css */

/* CSS code can be added here for styling the HTML elements, if needed */
/* This file is optional and depends on the design requirements */